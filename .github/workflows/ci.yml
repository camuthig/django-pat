name: Tests
on: [push, pull_request]
jobs:
  tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.6", "3.7", "3.8", "3.9" ]
    runs-on: ${{ matrix.os }}
    name: test-py${{ matrix.python-version }}-${{ matrix.os }}
    steps:
     - uses: actions/checkout@v3
     - uses: actions/setup-python@v3
       with:
         python-version: ${{ matrix.python-version }}
         architecture: x64
     - run: pip install nox
     - uses: abatilo/actions-poetry@v2.0.0
       with:
         poetry-version: 1.1.13
     - uses: actions/cache@v3
       with:
         path: ~/.nox
         key: ${{ matrix.os }}-${{ matrix.python-version }}-nox-${{ hashFiles('**/pyproject.toml') }}
         restore-keys: |
           ${{ matrix.os }}-${{ matrix.python-version }}-nox-
     - name: Run tests
       run: nox -s tests --python ${{ matrix.python-version }}
  lint:
    strategy:
      matrix:
        check: [ "types", "formatting" ]
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.6
          architecture: x64
      - run: pip install nox
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.13
      - uses: actions/cache@v3
        with:
          path: ~/.nox
          key: ${{ runner.os }}-${{ runner.python-version }}-nox-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.python-version }}-nox-
      - run: nox -s ${{ matrix.check }}
